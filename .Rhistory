DT[.(unique(city), 1, nomatch=TRUE)]
DT[.(unique(city), 1), nomatch=TRUE]
DT[.(unique(city), 1), nomatch=NULL]
setkey(DT, "city")
key(DT)
setkey(DT, "city", "previous")
key(DT)
setkey(DT, NULL)
key(DT)
blogdown::serve_site()
#load packages - create same data set
library(data.table)
library(knitr)
set.seed(12345)
N <- 15
DT = data.table(id=rep(1:N), age = sample(30:50, N, TRUE),
city = sample(c("Pretoria", "Cape Town", "Durban"), N, TRUE),
previous = sample(c("Pretoria", "Cape Town", "Durban"), N, TRUE),
ans_1=sample(3,N,TRUE),
ans_2=sample(3,N,TRUE),
ans_3=sample(3,N,TRUE) )
DT[3, "ans_1"] <- NA   #create a missing value
ans <- DT[1:4, ]
kable(ans)
ans <- DT[c(2, 5, 7), ]
kable(ans)
ans <- DT[-(1:5), ]
kable(ans)
set.seed(1234567)
kable(DT[sample(1:nrow(DT), 3, replace=FALSE) , ])
ans <- DT[city=="Cape Town"]
kable(ans)
setkey(DT, city)
head(DT)
DT["Pretoria"]
DT[c( "Cape Town", "Pretoria")]
setkey(DT, city, previous)
head(DT)
DT[list("Durban", "Pretoria")]
DT[.("Durban", "Pretoria")]
setkey(DT, city, ans_1)
DT[.("Durban", 1)]
setkey(DT, city, previous)
DT[.("Durban")]
DT[.(c("Durban", "Pretoria"))]
DT[.(unique(city), "Durban")]
setkey(DT, city, ans_1)
DT[.(unique(city), 1)]
DT[.(unique(city), 1), nomatch=NULL]
setkey(DT, "city")
key(DT)
setkey(DT, "city", "previous")
key(DT)
setkey(DT, NULL)
key(DT)
setindex(DT, previous)
head(DT)
indices(DT)
str(DT)
DT[city =="Durban", ]
indices(DT)
DT["Pretoria", on= "ans_1"]
DT[1, on= "ans_1"]
View(DT)
DT[ c(1) , on= "ans_1"]
DT[ .(1) , on = "ans_1"]
indices(DT)
DT[ 1:2 , on = "ans_1"]
DT[ .(1,2) , on = "ans_1"]
indices(DT)
DT[ .(1,3) , on = "ans_1"]
indices(DT)
DT[ .(c(1,3)) , on = "ans_1"]
indices(DT)
DT[ .(c(1,2)) , on = "ans_1"]
indices(DT)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
browseVignettes(package="data.table")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
class(NA)
class(NULL)
class(<NA>)
class(Inf)
class(NaN)
class(Inf)
class(NaN)
class(1L)
class(1L)== "numeric"
is.numeric(1L)
is.numeric(1)
is.integer(1)
is.integer(1L)
knitr::opts_chunk$set(echo = TRUE)
n <- 10
s10 <-  n* (n+1) /2
s10
n2 <- 100
s100 <- n2 * (n2 +1) /2
s100
n <- 10
s10 <-  n* (n+1) /2
s10
n2 <- 100
s100 <- n2 * (n2 +1) /2
s100
sum(1:100)
blogdown::serve_site()
blogdown::serve_site()
sum(1:100)
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
1784.1/625.9
1000 /2.850455
blogdown::stop_server()
blogdown::serve_site()
500/2.850455
blogdown::stop_server()
blogdown::serve_site()
3000/2.850455
blogdown::serve_site()
724*2
561*2
724*4
561*4
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
24/561
24/561*100
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
(z <- as.integer(3.14))
is.integer(z)
(z <- as.integer("5.27"))  # coerce a decimal string
is.integer(z)
(z <- as.integer("one"))  # coerce a decimal string
is.integer(z)
(z <- as.integer(3.14))
is.integer(z)
(z <- as.integer("5.27"))  # coerce a decimal string
is.integer(z)
(z <- as.integer("1"))  # coerce a decimal string
is.integer(z)
(z <- as.integer(3.14))
is.integer(z)
(z <- as.integer("5.27"))  # coerce a decimal string
is.integer(z)
(z <- as.integer("1"))  # coerce a decimal string
is.integer(z)
(z <- as.integer("one"))  # coerce a decimal string
is.integer(z)
test <- TRUE
classe(test)
test <- TRUE
class(test)
help("&")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
(x <- rnorm(10))
(y <- x [1:5])
(z <- x[c(1,3,2,7)])
c("x","y")[rep(c(1,2,2,1), times=2)]
nombreJour <- c(31, 28, 31,30,31,30,31,31, 30, 31, 30, 31 )
names(nombreJour) = c("Janv", "Fevr", "Mars", "Avri", "Mai", "Juin", "Juil", "Aout", "Sept", "Oct", "Nove", "Dece")
nombreJour <- c(31, 28, 31,30,31,30,31,31, 30, 31, 30, 31 )
names(nombreJour) = c("Janv", "Fevr", "Mars", "Avri", "Mai", "Juin", "Juil", "Aout", "Sept", "Oct", "Nove", "Dece")
nombreJour
nombreJour <- c(31, 28, 31,30,31,30,31,31, 30, 31, 30, 31 )
names(nombreJour) = c("Janv", "Fevr", "Mars", "Avri", "Mai", "Juin", "Juil", "Aout", "Sept", "Oct", "Nove", "Dece")
nombreJour
printemps <- nombreJour[c("Avri", "Mai", "Juin")]
printemps
mois <- c("Janv", "Fevr", "Mars", "Avri", "Mai", "Juin", "Juil", "Aout", "Sept", "Oct", "Nove", "Dece")
mois
nombresPremiers1a7 <- c(1,2,3,5,7)
nombresPremiers1a7
mois <- c("Janv", "Fevr", "Mars", "Avri", "Mai", "Juin", "Juil", "Aout", "Sept", "Oct", "Nove", "Dece")
mois
nombresPremiers1a7 <- c(1,2,3,5,7)
nombresPremiers1a7
?primes()
? primes
?? primes
seq96 <- rep(1:3,times = 96/3)
seq96
seq8 <- rep(1:4, each=2)
seq8
months
months()
months(1)
? months
noDays <- c(31, 28, 31,30,31,30,31,31, 30, 31, 30, 31 )
names(noDays) <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec")
noDays
spring <- noDays[c("Apr", "May", "Jun", "ee")]
printemps
noDays <- c(31, 28, 31,30,31,30,31,31, 30, 31, 30, 31 )
names(noDays) <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
noDays
spring <- noDays[c("Apr", "May", "Jun")]
spring
seq10 <- rep(1:5, each=2)
seq10
seq10[seq10<4]
seq10 <- rep(1:5, each=2)
seq10
seq6 <- seq10[seq10<4]
seq6
sub("little", "big", "Mary has a little lamb.")
class(NA)
? NA
? NULL
class(NULL)
class(Inf)
? Inf
1+ Inf
1+ Inf
Class(Inf)
1+ Inf
class(Inf)
class(NaN)
class(NaN)
3 / 0 ## = Inf a non-zero number divided by zero creates infinity
0 / 0  ## =  NaN
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans[["aInnerList"]][1]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans
ans["aVector"]
ans[["aInnerList"]][1]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans[["aInnerList"]][1]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans[["aInnerList"]]["color"]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans[["aInnerList"]]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["aInnerList"]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans
ans["aVector"]
ans["aInnerList"]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans
ans["aVector"]
ans["anInnerList"]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["aInnerList"]][[1]]
ans[["aInnerList"]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]]
ans[["anInnerList"]][[1]][2]
ans <- list(1:10, 11:20, list(letters[1:10], letters[11:20]))
ans[3]
ans[[3]][1]
ans[[3]][[1]]
ans[[3]][[1]][2]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]]
ans[["firstQuarter"]][[1]]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]]
ans[["firstQuarter"]][[1]]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]]
ans[["firstQuarter"]][[1]]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]][1]
ans[["firstQuarter"]][[1]]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]][1]
ans[["firstQuarter"]][[1]]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][["color"]]
ans[["firstQuarter"]][[1]]
ans <- list(firstQarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][["color"]]
ans[["firstQuarter"]][1]
ans <- list(firstQuarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][["color"]]
ans[["firstQuarter"]][1]
ans <- list(firstQuarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][["color"]]
ans[["firstQuarter"]][[1]]
ans <- list(firstQuarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][["color"]]
ans[["firstQuarter"]][1]
ans <- list(firstQuarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][[1]]
ans[["firstQuarter"]][1]
ans <- list(firstQuarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][1]
ans[["firstQuarter"]][1]
ans <- list(firstQuarter = c("Jan","Feb","Mar"), aVector = c(3,9,5,1,-2,8), anInnerList = list(color = "green", size =12.3))
ans["aVector"]
ans["anInnerList"]
ans[["anInnerList"]][1]
ans[["anInnerList"]][[1]]
list1 <- list(1:5,2:3)
list2 <- list("Sun","Mon")
merged.list <- c(list1,list2)
merged.list
list1 <- list(1:5,2:3)
list2 <- list("Sun","Mon")
merged.list <- c(list1,list2)
merged.list
unlist(merged.list)
? sapply
? Reduce
list1 <- list(1:5,2:3)
list2 <- list("Sun","Mon")
merged.list <- c(list1,list2)
merged.list
lis <- list(1:5,2:3)
vec <- c("Sun","Mon")
c(lis,vec)
l <- c(l1, l2)
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
Reduce(x <- function(x) x[[1]], l)
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
Reduce(function(x) x[[1]], l)
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
Reduce(function(x) x[[1]], l)
sapply(l, function(x) x[[1]])
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
sapply(l, function(x) x[1])
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
lapply(l, function(x) x[1])
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
sapply(l, function(x) x[1])
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
Reduce("+", sapply(l, function(x) x[1]))
l1 <- list(1:10)
l2 <- list(3:14)
l <- c(l1, l2)
l
Reduce("+", sapply(l, function(x) x[1]))
Reduce("+", sapply(l, function(x) x))
list(1:10)
list(3:14)
list(3:12)
l1 <- list(1:10)
l2 <- list(3:12)
l <- c(l1, l2)
l
Reduce("+", sapply(l, function(x) x))
sapply(l, function(x) x)
l1 <- list(1:10)
l2 <- list(3:12)
l <- c(l1, l2)
l
Reduce("+", sapply(l, function(x) x),accumulate = TRUE)
sapply(l, function(x) x)
sapply(l, function(x) x, simplify = T)
sapply(l, function(x) x, simplify = T)
lapply(l, function(x) x)
l
l
lapply(l, function(x) x^2)
l1 <- list(1:10)
l2 <- list(3:12)
l <- c(l1, l2)
l
lapply(l, function(x) x[1:2]^2)
ls(mtcars)
names(mtcars)
str(mtcars)
mtcars[order(mpg),]
