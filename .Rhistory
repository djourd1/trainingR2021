members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
library(data.table)
set.seed(12345)
N <- 1000
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(d, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
library(data.table)
set.seed(12345)
N <- 1000
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(d, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members <- melt(hh, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- melt(hh, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
hh
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
members_dt = copy(members)
setkey(members_dt, "hh_id")
hh_dt = copy(hh)
setkey(hh_dt, "hh_id")
merge1 = function() merge(hh, members, by="hh_id", all=TRUE)
merge2 = function() merge(hh_dt, members_dt, by="hh_id", all=TRUE)
library(microbenchmark)
microbenchmark(merge1(), merge2(), times = 10)
library(data.table)
set.seed(12345)
N <- 10000
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
members_dt = copy(members)
setkey(members_dt, "hh_id")
hh_dt = copy(hh)
setkey(hh_dt, "hh_id")
merge1 = function() merge(hh, members, by="hh_id", all=TRUE)
merge2 = function() merge(hh_dt, members_dt, by="hh_id", all=TRUE)
library(microbenchmark)
microbenchmark(merge1(), merge2(), times = 10)
library(data.table)
set.seed(12345)
N <- 100000
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
members_dt = copy(members)
setkey(members_dt, "hh_id")
hh_dt = copy(hh)
setkey(hh_dt, "hh_id")
merge1 = function() merge(hh, members, by="hh_id", all=TRUE)
merge2 = function() merge(hh_dt, members_dt, by="hh_id", all=TRUE)
library(microbenchmark)
microbenchmark(merge1(), merge2(), times = 10)
library(data.table)
set.seed(12345)
N <- 100000
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members))
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members$age <- sample(25:70, nrow(members))
members$age <- sample(25:70, nrow(members), TRUE)
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
members_dt = copy(members)
setkey(members_dt, "hh_id")
hh_dt = copy(hh)
setkey(hh_dt, "hh_id")
merge1 = function() merge(hh, members, by="hh_id", all=TRUE)
merge2 = function() merge(hh_dt, members_dt, by="hh_id", all=TRUE)
library(microbenchmark)
microbenchmark(merge1(), merge2(), times = 10)
library(data.table)
set.seed(12345)
N <- 1000000
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
members_dt = copy(members)
setkey(members_dt, "hh_id")
hh_dt = copy(hh)
setkey(hh_dt, "hh_id")
merge1 = function() merge(hh, members, by="hh_id", all=TRUE)
merge2 = function() merge(hh_dt, members_dt, by="hh_id", all=TRUE)
library(microbenchmark)
microbenchmark(merge1(), merge2(), times = 10)
merge1()
library(data.table)
set.seed(12345)
N <- 100
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]
members_dt = copy(members)
setkey(members_dt, "hh_id")
hh_dt = copy(hh)
setkey(hh_dt, "hh_id")
merge1 = function() merge(hh, members, by="hh_id", all=TRUE)
merge2 = function() merge(hh_dt, members_dt, by="hh_id", all=TRUE)
library(microbenchmark)
microbenchmark(merge1(), merge2(), times = 10)
merge1()
library(data.table)
set.seed(12345)
N <- 10
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
city = sample(c("Pretoria", "Cape Town"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
hh[hh_id>=2, hh_id := hh_id + 1 ]
hh
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==11, hh_id := 12]  # one id will not match
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
merge(hh, members, by="hh_id", all=TRUE)
members
members[hh_id==10, hh_id := 12]  # one id will not match
merge(hh, members, by="hh_id", all=TRUE)
library(data.table)
set.seed(12345)
N <- 10
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
province = sample(c("EC", "L", "KZN", "MP", "WC"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, city)]
hh[hh_id>=2, hh_id := hh_id + 1 ]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]  # one id will not match
merge(hh, members, by="hh_id", all=TRUE)
library(data.table)
set.seed(12345)
N <- 10
household <- data.table (hh_id=rep(1:N),
hh_name = sample(c("Luckhoff", "Luter", "Kotze", "Kellerman", "Hesom", "Masondo"), N, TRUE),
province = sample(c("EC", "L", "KZN", "MP", "WC"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, province)]
hh[hh_id>=2, hh_id := hh_id + 1 ]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]  # one id will not match
merge(hh, members, by="hh_id", all=TRUE)
View(members)
hh[members, on="hh_id"]
hh[members, on="hh_id", nomatch=NULL]
hh[members, on="hh_id", nomatch=NULL, mult="first"]
hh[members, on="hh_id",  mult="first"]
fwrite(hh, file="households.csv")
? getwd()
getwd()
d2 <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
d2
str(d2)
fwrite(members, file="content/members.csv")
household <- data.table (hh_id=rep(1:N),
hh_name = LETTERS(1:N),
province = sample(c("EC", "L", "KZN", "MP", "WC"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
letters
household <- data.table (hh_id=rep(1:N),
hh_name = LETTERS[1:N],
province = sample(c("EC", "L", "KZN", "MP", "WC"), N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, province)]
hh[hh_id>=2, hh_id := hh_id + 1 ]
fwrite(hh, file="content/households.csv")
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/hh.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/households.csv")
house
library(data.table)
set.seed(12345)
N <- 10
household <- data.table (hh_id=rep(1:N),
hh_name = LETTERS[1:N],
province = sample(c("EC", "L", "KZN", "MP", "WC"), N, TRUE),
house_type = sample(1:2, N, TRUE),
memb_1  = sample(c("Moses", "Pietr", "Stephen", "Liesl", "Marvel", "Justice"), N, TRUE),
memb_2  = sample(c("John", "Joe","Nofoto" , NA), N, TRUE),
memb_3  = sample(c("Inyoni", "Jabu",  NA), N, TRUE),
memb_4  = sample(c("Ulwazi", "Anele ",  NA, NA), N, TRUE) )
hh <- household[, .(hh_id, hh_name, province, house_type)]
hh[hh_id>=2, hh_id := hh_id + 1 ]
members <- melt(household, id.vars = 1, measure.vars = patterns("memb"), na.rm = TRUE)
members$id <- 1:nrow(members)
members$number_in_family <- rowidv(members, cols=c("hh_id"))
members[order(hh_id)]
members$age <- sample(25:70, nrow(members), TRUE)
members$education <- sample(1:7, nrow(members), TRUE)
members$off_farm <- sample(c(0,1), nrow(members), TRUE)
members$income <- sample(1000:10000, nrow(members), TRUE)
members <- members[order(hh_id),.(id, hh_id, name=value, no = number_in_family, age, education, off_farm, income)]
members$id <- 1:nrow(members)
members
members[hh_id==10, hh_id := 12]  # one id will not match
merge(hh, members, by="hh_id", all=TRUE)
# 2 not in hh but in members
# 11 in hh but no in members
hh[members, on="hh_id",  mult="first"]
fwrite(hh, file="content/households.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
house
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
memb
merge(house, members, by="hh_id", all = FALSE)
merged <- merge(house, members, by="hh_id", all = FALSE)
merged[, .(mean(age), mean(education)), by=.(hh_id, hh_name)]
merged <- merge(house, members, by="hh_id", all = FALSE)
merged[, .(province, mean_age= mean(age), mean_educ = mean(education)), by=.(hh_id, hh_name)]
merged <- merge(house, members, by="hh_id", all = FALSE)
merged[, .(mean_age= mean(age), mean_educ = mean(education)), by=.(hh_id, hh_name, province)]
merged <- merge(house, members, by="hh_id", all = FALSE)
merged[, .(mean_age= mean(age), mean_educ = mean(education)), by=.(hh_id, hh_name, province, house_type)]
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
merged <- merge(house, members, by="hh_id", all = FALSE)
merged[, .(mean_age= mean(age), mean_educ = mean(education)), by=.(hh_id, hh_name, province, house_type)]
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
house
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
memb
merged <- merge(house, members, by="hh_id", all = FALSE)
merged[, .(mean_age= mean(age), mean_educ = mean(education)), by=.(hh_id, hh_name, province, house_type)]
blogdown::stop_server()
blogdown::serve_site()
merge(individuals, households, by="hh_id")
merge(memb, households, by="hh_id")
merge(memb, hh, by="hh_id")
merge(memb, hh, by="hh_id", all = TRUE)
? merge
merged <- merge(house, memb, by="hh_id")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
house
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
house
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
memb
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(data.table)
house <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/household.csv")
house
memb <- fread("https://raw.githubusercontent.com/djourd1/dataR/main/members.csv")
memb
merge(memb, house, by="hh_id", all = TRUE)
merge(memb, house, by="hh_id", all = FALSE)
merge(memb, house, by="hh_id", all.x = TRUE)
merge(memb, house, by="hh_id", all.y = TRUE)
merged <- merge(house, memb, by="hh_id")
merged
merged[, age_m = mean(age), by=.(hh_id)]
merged <- merge(house, memb, by="hh_id")
merged
merged[, age_m = mean(age), by=.(hh_id)]
merged[ , mean(age), by=.(hh_id)]
merged[ , bb=mean(age), by=.(hh_id)]
merged[ , .(bb=mean(age)), by=.(hh_id)]
merged[ , .(hh_name, province, bb=mean(age)), by=.(hh_id)]
merged[ , .(bb=mean(age)), by=.(hh_id, hh_name, province)]
merged[ , .(age_m=mean(age)), by=.(hh_id, hh_name, province)]
merged[ , .(age_m=mean(age)), by=.(hh_id, hh_name, province, house_type)]
memb_summary  <- memb[, .(age_m), by = .(hh_id)]
memb_summary  <- memb[, .(age_m =  mean(age)), by = .(hh_id)]
merge(house, memb_summary, by = "hh_id")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
205/2
205/2 + 2.5
(205/2) + 2.5
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
? cbind
? source_girs
? source_gist
